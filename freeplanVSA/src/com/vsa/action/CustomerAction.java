/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.vsa.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.vsa.data.CustomerDB;
import com.vsa.form.CustomerForm;
import com.vsa.util.DateUtil;

/** 
 * MyEclipse Struts
 * Creation date: 09-28-2009
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="loginForm" scope="request" validate="true"
 */
public class CustomerAction extends Action {
	
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		CustomerForm customerForm = (CustomerForm) form;// TODO Auto-generated method stub
		CustomerDB customerDB = new CustomerDB();
		String customerID 			= customerForm.getCustomerID();
		String customerName 		= new String(customerForm.getCustomerName().getBytes("ISO8859_1"), "utf-8");
		String customerSurName 		= new String(customerForm.getCustomerSurName().getBytes("ISO8859_1"), "utf-8");
		String customerTel 			= customerForm.getCustomerTel();
		String customerEmail 		= customerForm.getCustomerEmail();
		String customerDOB 			= customerForm.getCustomerDOB();
		String customerHouseNo 		= customerForm.getCustomerHouseNo();
		String customerVillageNo 	= customerForm.getCustomerVillageNo();
		String customerVillage 		= new String(customerForm.getCustomerVillage().getBytes("ISO8859_1"), "utf-8");
		String customerLane 		= new String(customerForm.getCustomerLane().getBytes("ISO8859_1"), "utf-8");
		String customerSubDistrict 	= customerForm.getCustomerSubDistrict();
		String customerDistrict 	= customerForm.getCustomerDistrict();
		String customerProvince 	= customerForm.getCustomerProvince();
		String customerPostCode 	= customerForm.getCustomerPostCode();
		String add 					= customerForm.getAdd();
		String update 				= customerForm.getUpdate();
		String delete 				= customerForm.getDelete();
		String alertMassage			= "";
		
		DateUtil dateUtil = new DateUtil();
		
		String forwardText = null;
	  
		if(add!=null){
			
		if(!customerName.equals("")&&!customerSurName.equals("")&&!customerSurName.equals("")&&!customerTel.equals("")&&!customerEmail.equals("")
			&&!customerDOB.equals("")&&!customerHouseNo.equals("")&&!customerVillageNo.equals("")&&!customerVillage.equals("")&&!customerLane.equals("")
			&&!customerSubDistrict.equals("")&&!customerDistrict.equals("")&&!customerProvince.equals("")&&!customerPostCode.equals("")){
		
			if(!customerDOB.equals("")) customerDOB	= dateUtil.CnvToYYYYMMDD(customerDOB, '-');	
		
		customerDB.AddCustomer(customerName, customerSurName, customerTel, customerEmail, customerDOB, 
				customerHouseNo, customerVillageNo, customerVillage, customerLane, customerSubDistrict, customerDistrict, 
				customerProvince, customerPostCode);
		
		List customerList = customerDB.GetCustomerList("", "");
		request.setAttribute("customerList", customerList);
		
		forwardText = "success";
		}else{
			alertMassage = "กรุณา กรอก ข้อมูลให้ครบถ้วน";
			forwardText = "success";
		}
		}
		if(update!=null){
			if(!customerName.equals("")&&!customerSurName.equals("")&&!customerSurName.equals("")&&!customerTel.equals("")&&!customerEmail.equals("")
					&&!customerDOB.equals("")&&!customerHouseNo.equals("")&&!customerVillageNo.equals("")&&!customerVillage.equals("")&&!customerLane.equals("")
					&&!customerSubDistrict.equals("")&&!customerDistrict.equals("")&&!customerProvince.equals("")&&!customerPostCode.equals("")){
			
			if(!customerDOB.equals("")) customerDOB	= dateUtil.CnvToYYYYMMDD(customerDOB, '-');
			
			customerDB.UpdateCustomer(customerID, customerName, customerSurName, customerTel, customerEmail, customerDOB, 
					customerHouseNo, customerVillageNo, customerVillage, customerLane, customerSubDistrict, customerDistrict, 
					customerProvince, customerPostCode);
			
			List customerList = customerDB.GetCustomerList("", "");
			request.setAttribute("customerList", customerList);
			
			forwardText = "success";
		}else{
			alertMassage = "กรุณา กรอก ข้อมูลให้ครบถ้วน";
			forwardText = "success";
		}	
		}
		if(delete!=null){
			customerDB.DeleteCustomer(customerID);
			
			List customerList = customerDB.GetCustomerList("", "");
			request.setAttribute("customerList", customerList);
			
			forwardText = "success";
		}
		
		return mapping.findForward(forwardText);
	}
}